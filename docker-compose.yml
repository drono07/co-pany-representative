version: '3.8'

services:
  # Redis for Celery broker and result backend
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB for data storage
  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: website_analysis_platform
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI application
  web:
    build: .
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/website_analysis_platform?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-in-production
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - .:/app
    command: python -m uvicorn fastapi_app:app --host 0.0.0.0 --port 8000

  # Celery worker
  celery-worker:
    build: .
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/website_analysis_platform?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-in-production
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - .:/app
    command: celery -A celery_app worker --loglevel=info --concurrency=4 --queues=analysis,notifications,maintenance

  # Celery beat scheduler
  celery-beat:
    build: .
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/website_analysis_platform?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-in-production
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - .:/app
      - celery_beat_data:/tmp
    command: celery -A celery_app beat --loglevel=info --schedule=/tmp/celerybeat-schedule --pidfile=/tmp/celerybeat.pid

  # Flower for Celery monitoring (optional)
  flower:
    build: .
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    volumes:
      - .:/app
    command: celery -A celery_app flower --port=5555

volumes:
  redis_data:
  mongodb_data:
  celery_beat_data:
